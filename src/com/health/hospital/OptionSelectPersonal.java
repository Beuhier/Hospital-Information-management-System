/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.health.hospital;

import java.awt.Color;
import java.awt.Font;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import org.jdesktop.swingx.prompt.PromptSupport;

/**
 *
 * @author chinex
 */
public class OptionSelectPersonal extends javax.swing.JPanel {

    /**
     * Creates new form PatOptionSelect1
     */
     private final LoginFrame loginFrame;
   
    public OptionSelectPersonal(LoginFrame loginFrame) {
        initComponents();
        
        textCustomise("Enter Card No.", PERSONALCardNoTextField);
        textCustomise("Enter Phone Number", PERSONALPhoneNumberTextField);
        textCustomise("Enter Occupation", PERSONALOccupationTextField);
        textCustomise("Enter Age", PERSONALAgeTextField);
        textCustomise("Enter Address", PERSONALAddressTextField);
        textCustomise("Enter Name", PERSONALkinNameTextField);
        textCustomise("Enter Relationship with Next of kin", PERSONALkinRelationTextField);
        textCustomise("Enter Phone Number", PERSONALkinPhoneNumberTextField);
        textCustomise("Enter Address", PERSONALkinAddressTextField);
        
        this.loginFrame=loginFrame;
        
    }

    private void textCustomise(String text, JTextField component)
    {
        PromptSupport.setPrompt(text, component);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, component);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.SHOW_PROMPT, component);
        PromptSupport.setFontStyle(Font.BOLD, component);
        PromptSupport.setForeground(Color.darkGray, component);
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PersonalCardPanel = new javax.swing.JPanel();
        PERSONALpersonallabel = new javax.swing.JLabel();
        PERSONALKINlabel = new javax.swing.JLabel();
        PERSONALstateComboBox = new javax.swing.JComboBox();
        PERSONALmaritalComboBox = new javax.swing.JComboBox();
        PERSONALreligioncombobox = new javax.swing.JComboBox();
        PERSONALnationalityComboBox = new javax.swing.JComboBox();
        PERSONALkinPhoneNumberTextField = new javax.swing.JTextField();
        PERSONALkinAddressTextField = new javax.swing.JTextField();
        PERSONALkinNameTextField = new javax.swing.JTextField();
        PERSONALkinRelationTextField = new javax.swing.JTextField();
        PERSONALCardNoTextField = new javax.swing.JTextField();
        PERSONALPhoneNumberTextField = new javax.swing.JTextField();
        PERSONALOccupationTextField = new javax.swing.JTextField();
        PERSONALAgeTextField = new javax.swing.JTextField();
        PERSONALAddressTextField = new javax.swing.JTextField();
        PERSONALSaveButton = new javax.swing.JButton();
        PERSONALBackToPatOption1Button = new javax.swing.JButton();
        PersonalDateOfRegChooser = new com.toedter.calendar.JDateChooser();
        PERSONALpersonalnnextofkinlabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(153, 153, 153));
        setPreferredSize(new java.awt.Dimension(836, 623));

        PersonalCardPanel.setBackground(new java.awt.Color(102, 153, 255));

        PERSONALpersonallabel.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N
        PERSONALpersonallabel.setText("PERSONAL");

        PERSONALKINlabel.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N
        PERSONALKINlabel.setText("NEXT OF KIN");

        PERSONALstateComboBox.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        PERSONALstateComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select State" }));

        PERSONALmaritalComboBox.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        PERSONALmaritalComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Marital Status", "Married", "Single" }));

        PERSONALreligioncombobox.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        PERSONALreligioncombobox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Religion", "Christian", "Muslim", "Traditional", "Buddism", "Judaism", "Hinduism", "Others" }));

        PERSONALnationalityComboBox.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        PERSONALnationalityComboBox.setMaximumRowCount(100);
        PERSONALnationalityComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Nationality", "AF  Afghanistan", "AL  Albania", "DZ  Algeria", "AS  American Samoa", "AD  Andorra", "AO  Angola", "AI  Anguilla", "AQ  Antarctica", "AG  Antigua and Barbuda", "AR  Argentina", "AM  Armenia", "AW  Aruba", "AU  Australia", "AT  Austria", "AZ  Azerbaijan", "BS  Bahamas", "BH  Bahrain", "BD  Bangladesh", "BB  Barbados", "BY  Belarus", "BE  Belgium", "BZ  Belize", "BJ  Benin", "BM  Bermuda", "BT  Bhutan", "BO  Bolivia", "BA  Bosnia and Herzegovina", "BW  Botswana", "BV  Bouvet Island", "BR  Brazil", "IO  British Indian Ocean Territory", "VG  British Virgin Islands", "BN  Brunei", "BG  Bulgaria", "BF  Burkina Faso", "BI  Burundi", "KH  Cambodia", "CM  Cameroon", "CA  Canada", "CV  Cape Verde", "KY  Cayman Islands", "CF  Central African Republic", "TD  Chad", "CL  Chile", "CN  China", "CX  Christmas Island", "CC  Cocos Islands", "CO  Colombia", "KM  Comoros", "CG  Congo", "CK  Cook Islands", "CR  Costa Rica", "HR  Croatia", "CU  Cuba", "CY  Cyprus", "CZ  Czech Republic", "CI  Côte d'Ivoire", "DK  Denmark", "DJ  Djibouti", "DM  Dominica", "DO  Dominican Republic", "EC  Ecuador", "EG  Egypt", "SV  El Salvador", "GQ  Equatorial Guinea", "ER  Eritrea", "EE  Estonia", "ET  Ethiopia", "FK  Falkland Islands", "FO  Faroe Islands", "FJ  Fiji", "FI  Finland", "FR  France", "GF  French Guiana", "PF  French Polynesia", "TF  French Southern Territories", "GA  Gabon", "GM  Gambia", "GE  Georgia", "DE  Germany", "GH  Ghana", "GI  Gibraltar", "GR  Greece", "GL  Greenland", "GD  Grenada", "GP  Guadeloupe", "GU  Guam", "GT  Guatemala", "GN  Guinea", "GW  Guinea-Bissau", "GY  Guyana", "HT  Haiti", "HM  Heard Island And McDonald Islands", "HN  Honduras", "HK  Hong Kong", "HU  Hungary", "IS  Iceland", "IN  India", "ID  Indonesia", "IR  Iran", "IQ  Iraq", "IE  Ireland", "IL  Israel", "IT  Italy", "JM  Jamaica", "JP  Japan", "JO  Jordan", "KZ  Kazakhstan", "KE  Kenya", "KI  Kiribati", "KW  Kuwait", "KG  Kyrgyzstan", "LA  Laos", "LV  Latvia", "LB  Lebanon", "LS  Lesotho", "LR  Liberia", "LY  Libya", "LI  Liechtenstein", "LT  Lithuania", "LU  Luxembourg", "MO  Macao", "MK  Macedonia", "MG  Madagascar", "MW  Malawi", "MY  Malaysia", "MV  Maldives", "ML  Mali", "MT  Malta", "MH  Marshall Islands", "MQ  Martinique", "MR  Mauritania", "MU  Mauritius", "YT  Mayotte", "MX  Mexico", "FM  Micronesia", "MD  Moldova", "MC  Monaco", "MN  Mongolia", "ME  Montenegro", "MS  Montserrat", "MA  Morocco", "MZ  Mozambique", "MM  Myanmar", "NA  Namibia", "NR  Nauru", "NP  Nepal", "NL  Netherlands", "AN  Netherlands Antilles", "NC  New Caledonia", "NZ  New Zealand", "NI  Nicaragua", "NE  Niger", "NG  Nigeria", "NU  Niue", "NF  Norfolk Island", "KP  North Korea", "MP  Northern Mariana Islands", "NO  Norway", "OM  Oman", "PK  Pakistan", "PW  Palau", "PS  Palestine", "PA  Panama", "PG  Papua New Guinea", "PY  Paraguay", "PE  Peru", "PH  Philippines", "PN  Pitcairn", "PL  Poland", "PT  Portugal", "PR  Puerto Rico", "QA  Qatar", "RE  Reunion", "RO  Romania", "RU  Russia", "RW  Rwanda", "SH  Saint Helena", "KN  Saint Kitts And Nevis", "LC  Saint Lucia", "PM  Saint Pierre And Miquelon", "VC  Saint Vincent And The Grenadines", "WS  Samoa", "SM  San Marino", "ST  Sao Tome And Principe", "SA  Saudi Arabia", "SN  Senegal", "RS  Serbia", "CS  Serbia and Montenegro", "SC  Seychelles", "SL  Sierra Leone", "SG  Singapore", "SK  Slovakia", "SI  Slovenia", "SB  Solomon Islands", "SO  Somalia", "ZA  South Africa", "GS  South Georgia And The South Sandwich", "Islands KR  South Korea", "ES  Spain", "LK  Sri Lanka", "SD  Sudan", "SR  Suriname", "SJ  Svalbard And Jan Mayen", "SZ  Swaziland", "SE  Sweden", "CH  Switzerland", "SY  Syria", "TW  Taiwan", "TJ  Tajikistan", "TZ  Tanzania", "TH  Thailand", "CD  The Democratic Republic Of Congo", "TL  Timor-Leste", "TG  Togo", "TK  Tokelau", "TO  Tonga", "TT  Trinidad and Tobago", "TN  Tunisia", "TR  Turkey", "TM  Turkmenistan", "TC  Turks And Caicos Islands", "TV  Tuvalu", "VI  U.S. Virgin Islands", "UG  Uganda", "UA  Ukraine", "AE  United Arab Emirates", "GB  United Kingdom", "US  United States", "UM  United States Minor Outlying Islands", "UY  Uruguay", "UZ  Uzbekistan", "VU  Vanuatu", "VA  Vatican", "VE  Venezuela", "VN  Vietnam", "WF  Wallis And Futuna", "EH  Western Sahara", "YE  Yemen", "ZM  Zambia", "ZW  Zimbabwe", "AX  Åland Islands" }));

        PERSONALSaveButton.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        PERSONALSaveButton.setText("SAVE");
        PERSONALSaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PERSONALSaveButtonActionPerformed(evt);
            }
        });

        PERSONALBackToPatOption1Button.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        PERSONALBackToPatOption1Button.setText("BACK");
        PERSONALBackToPatOption1Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PERSONALBackToPatOption1ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PersonalCardPanelLayout = new javax.swing.GroupLayout(PersonalCardPanel);
        PersonalCardPanel.setLayout(PersonalCardPanelLayout);
        PersonalCardPanelLayout.setHorizontalGroup(
            PersonalCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PersonalCardPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(PersonalCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PersonalCardPanelLayout.createSequentialGroup()
                        .addGroup(PersonalCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PERSONALpersonallabel)
                            .addGroup(PersonalCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(PERSONALkinAddressTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(PERSONALkinPhoneNumberTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PersonalCardPanelLayout.createSequentialGroup()
                                    .addComponent(PERSONALkinNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(PERSONALkinRelationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(PERSONALAddressTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(PERSONALstateComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PersonalCardPanelLayout.createSequentialGroup()
                                    .addGroup(PersonalCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(PERSONALOccupationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(PERSONALAgeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(PERSONALreligioncombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(28, 28, 28)
                                    .addGroup(PersonalCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(PERSONALnationalityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(PERSONALmaritalComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 35, Short.MAX_VALUE))
                    .addGroup(PersonalCardPanelLayout.createSequentialGroup()
                        .addGroup(PersonalCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PERSONALKINlabel)
                            .addGroup(PersonalCardPanelLayout.createSequentialGroup()
                                .addComponent(PERSONALCardNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addGroup(PersonalCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(PERSONALPhoneNumberTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                                    .addComponent(PersonalDateOfRegChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(PersonalCardPanelLayout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addComponent(PERSONALBackToPatOption1Button, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(258, 258, 258)
                .addComponent(PERSONALSaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PersonalCardPanelLayout.setVerticalGroup(
            PersonalCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PersonalCardPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PERSONALpersonallabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PersonalCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PERSONALCardNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PERSONALPhoneNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PersonalCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PersonalDateOfRegChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PERSONALOccupationTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addGap(26, 26, 26)
                .addGroup(PersonalCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PERSONALAgeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PERSONALmaritalComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PersonalCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PERSONALreligioncombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PERSONALnationalityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(PERSONALstateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(PERSONALAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PERSONALKINlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addGroup(PersonalCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PERSONALkinRelationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PERSONALkinNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PERSONALkinPhoneNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PERSONALkinAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PersonalCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PERSONALSaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PERSONALBackToPatOption1Button, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        PERSONALpersonalnnextofkinlabel.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        PERSONALpersonalnnextofkinlabel.setForeground(new java.awt.Color(153, 204, 255));
        PERSONALpersonalnnextofkinlabel.setText("PERSONAL / NEXT OF KIN ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PersonalCardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PERSONALpersonalnnextofkinlabel))
                .addGap(46, 46, 46))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PERSONALpersonalnnextofkinlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PersonalCardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(55, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void PERSONALBackToPatOption1ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PERSONALBackToPatOption1ButtonActionPerformed
        // TODO add your handling code here:
         JPanel optPanel = loginFrame.getPatOptionPanell();
         loginFrame.updatePanel(optPanel);
    }//GEN-LAST:event_PERSONALBackToPatOption1ButtonActionPerformed

    private void PERSONALSaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PERSONALSaveButtonActionPerformed
        // TODO add your handling code here:
        String cardNo = PERSONALCardNoTextField.getText();
        String phone = PERSONALPhoneNumberTextField.getText();
        String occupation = PERSONALOccupationTextField.getText();
        String addr = PERSONALAddressTextField.getText();       
        String mStatus = (String) PERSONALmaritalComboBox.getSelectedItem();
        String religion = (String) PERSONALreligioncombobox.getSelectedItem();
        String nationality = (String)PERSONALnationalityComboBox.getSelectedItem();
        String state = (String)PERSONALstateComboBox.getSelectedItem();
        String kinName = PERSONALkinNameTextField.getText();
        String kinAddr = PERSONALkinAddressTextField.getText();
        String kinPhone = PERSONALkinPhoneNumberTextField.getText();
        String kinRelation = PERSONALkinRelationTextField.getText();
        if(!validated(cardNo, phone, occupation, addr, mStatus, religion, nationality, state, kinName, kinAddr, kinPhone, kinRelation))
        {
          JOptionPane.showMessageDialog(loginFrame, "Fill in all Spaces");   
        }
        else
        {
        Date dateOfReg = PersonalDateOfRegChooser.getDate();
        SimpleDateFormat sFormat = new SimpleDateFormat("yyyy-MM-dd");
        String dateOfRegFormat = sFormat.format(dateOfReg);
        int age = Integer.parseInt(PERSONALAgeTextField.getText());
        DBoperations db = new DBoperations();
        db.Personalcardsave(cardNo, phone, addr, occupation, dateOfRegFormat, mStatus, age, religion, nationality, state, kinName, kinAddr, kinPhone, kinRelation);
               
        PERSONALCardNoTextField.setText("");
        PERSONALPhoneNumberTextField.setText("");
        PERSONALOccupationTextField.setText("");
        PERSONALAddressTextField.setText("");
        PersonalDateOfRegChooser.setDate(null);
        PERSONALAgeTextField.setText("");
        PERSONALmaritalComboBox.setSelectedItem("Marital Status");
        PERSONALreligioncombobox.setSelectedItem("Select Religion");
        PERSONALnationalityComboBox.setSelectedItem("Select Nationality");
        PERSONALstateComboBox.setSelectedItem("Select State");
        PERSONALkinNameTextField.setText("");
        PERSONALkinAddressTextField.setText("");
        PERSONALkinPhoneNumberTextField.setText("");
        PERSONALkinRelationTextField.setText("");
    }
    }//GEN-LAST:event_PERSONALSaveButtonActionPerformed
private boolean 
validated(String cardNo,String phone, String occupation ,String addr ,String mStatus,String religion, 
String nationality, String state ,String kinName, String kinAddr, String kinPhone,String kinRelation)
  {
    if(cardNo.isEmpty()||phone.isEmpty()||occupation.isEmpty()||addr.isEmpty()||mStatus.isEmpty()||religion.isEmpty()||nationality.isEmpty()||
       state.isEmpty()||kinName.isEmpty()||kinAddr.isEmpty()||kinPhone.isEmpty()||kinRelation.isEmpty())
    {
        return false;
    }
    return true;
  }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField PERSONALAddressTextField;
    private javax.swing.JTextField PERSONALAgeTextField;
    private javax.swing.JButton PERSONALBackToPatOption1Button;
    private javax.swing.JTextField PERSONALCardNoTextField;
    private javax.swing.JLabel PERSONALKINlabel;
    private javax.swing.JTextField PERSONALOccupationTextField;
    private javax.swing.JTextField PERSONALPhoneNumberTextField;
    private javax.swing.JButton PERSONALSaveButton;
    private javax.swing.JTextField PERSONALkinAddressTextField;
    private javax.swing.JTextField PERSONALkinNameTextField;
    private javax.swing.JTextField PERSONALkinPhoneNumberTextField;
    private javax.swing.JTextField PERSONALkinRelationTextField;
    private javax.swing.JComboBox PERSONALmaritalComboBox;
    private javax.swing.JComboBox PERSONALnationalityComboBox;
    private javax.swing.JLabel PERSONALpersonallabel;
    private javax.swing.JLabel PERSONALpersonalnnextofkinlabel;
    private javax.swing.JComboBox PERSONALreligioncombobox;
    private javax.swing.JComboBox PERSONALstateComboBox;
    private javax.swing.JPanel PersonalCardPanel;
    private com.toedter.calendar.JDateChooser PersonalDateOfRegChooser;
    // End of variables declaration//GEN-END:variables
}
